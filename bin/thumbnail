#!/usr/bin/env zsh

print_error () print -R $'\e[31m'"Error: $*"$'\e[0m' >&2
die () { print_error $@; exit 1; }

here=$0:A:h
root=$here:h
base_dir=$root/thumbnails/base
generated_dir=$root/thumbnails/generated
logo=$root/identity/logo.png

fit=0
chinese_label=0
while [[ $1 == -* ]]; do
    case $1 in
        -h|--help)
            cat >&2 <<EOF
Usage: $0:t [options] <baseimage> <date> [<identifier>]

Generate custom thumbnail.

Positional arguments:
    <baseimage>
        Path or name of the base image. When only the name is given (i.e.,
        <baseimage> does not contain a forward slash), assume it can be found in
            ${(q-)basedir}
        In that case, if the extension is omitted, assume .png (with priority)
        or .jpg.
        Example: 美丽世界
    <date>
        Date of the performance, in YYYYMMDD format.
        Example: 20170408
    <identifier>
        (Optional.) Identifier of the performance within its series, usually a
        number.
        Example: 01

Options:
    -h, --help
        Print this help and exit.
    -f, --fit
        Fit the base image into the 16:9 box (preserving aspect ratio), with
        black padding, instead of stretching it to 16:9 (the default). Used
        when the base image is not remotely 16:9 (e.g. a square) and stretching
        would heavily distort it.
    -z, --zh
        Use Heiti-SC-Medium for the identifier label. Used when the identifier
        is Chinese text rather than a number, e.g. "午" or "晚".
EOF
            exit 1
            ;;
        -f|--fit)
            fit=1
            ;;
        -z|--zh)
            chinese_label=1
            ;;
        --)
            shift
            break
            ;;
        *)
            die "Unknown option ${(q-)1}."
            ;;
    esac
    shift
done
baseimage=$1
date=$2
identifier=$3

if [[ $baseimage == */* ]]; then
    input=$baseimage
else
    input=$base_dir/$baseimage
    if [[ $baseimage == *.* ]]; then
        [[ -f $input ]] || die "${(q-)input} does not exist."
    else
        if [[ -f $input.png ]]; then
            input=$input.png
        elif [[ -f $input.jpg ]]; then
            input=$input.jpg
        else
            die "${(q-)input}.(png|jpg) does not exist."
        fi
    fi
fi
[[ $date =~ ^[0-9]{8}$ ]] || die "${(q-)date} is not a valid date."

output_basename=${input:t:r}
# Prepend date if the basename isn't already prefixed with the date
[[ $output_basename == $date-* ]] || output_basename=$date-$output_basename
[[ -n $identifier ]] && output_basename+=-$identifier
output_basename+=.png
output=$generated_dir/$output_basename

size=1280x720
date_label_pointsize=72
identifier_label_pointsize=96
date_label_border=10x6
identifier_label_border=24x16
default_font=Monaco
chinese_font=Heiti-SC-Medium

if (( fit )); then
    input_resize_opts=(
        -resize $size
        -background black
        -gravity center
        -extent $size
    )
else
    input_resize_opts=(
        -resize $size\!
    )
fi
logo_opts=(
    \(
        $logo
        -resize 103x103
        -gravity southeast
    \)
    -composite
)
date_label_opts=(
    \(
        -font $default_font
        -pointsize $date_label_pointsize
        -background white
        -gravity southwest
        -bordercolor white
        -border $date_label_border
        label:$date
    \)
    -composite
)
identifier_label_opts=()
if [[ -n $identifier ]]; then
    (( chinese_label )) && identifier_label_font=$chinese_font || identifier_label_font=$default_font
    identifier_label_opts=(
        \(
            -font $identifier_label_font
            -pointsize $identifier_label_pointsize
            -background white
            -gravity northeast
            -bordercolor white
            -border $identifier_label_border
            label:$identifier
        \)
        -composite
    )
fi
mkdir -p $generated_dir
convert $input $input_resize_opts $logo_opts $date_label_opts $identifier_label_opts $output
optipng $output
identify $output
